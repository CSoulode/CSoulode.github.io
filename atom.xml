<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://blog.csoulode.com</id>
    <title>CSoulode</title>
    <updated>2020-03-11T03:37:25.405Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://blog.csoulode.com"/>
    <link rel="self" href="https://blog.csoulode.com/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://blog.csoulode.com/images/avatar.png</logo>
    <icon>https://blog.csoulode.com/favicon.ico</icon>
    <rights>All rights reserved 2020, CSoulode</rights>
    <entry>
        <title type="html"><![CDATA[蓝桥杯 BASIC-5 基础练习 查找整数]]></title>
        <id>https://blog.csoulode.com/post/w_PDE9xFW/</id>
        <link href="https://blog.csoulode.com/post/w_PDE9xFW/">
        </link>
        <updated>2020-03-11T03:37:18.000Z</updated>
        <content type="html"><![CDATA[<p>问题描述<br>
给出一个包含n个整数的数列，问整数a在数列中的第一次出现是第几个。</p>
<p>输入格式<br>
第一行包含一个整数n。<br>
第二行包含n个非负整数，为给定的数列，数列中的每个数都不大于10000。<br>
第三行包含一个整数a，为待查找的数。</p>
<p>输出格式<br>
如果a在数列中出现了，输出它第一次出现的位置(位置从1开始编号)，否则输出-1。</p>
<p>样例输入<br>
6<br>
1 9 4 8 3 9<br>
9</p>
<p>样例输出<br>
2</p>
<p>数据规模与约定<br>
1 &lt;= n &lt;= 1000。</p>
<pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;
using namespace std;

int a[1001];
int main(){
    int n;
    cin &gt;&gt; n;
    for(int i = 1; i &lt;= n; i++)
        cin &gt;&gt; a[i];
    int b, flag = 0;
    cin &gt;&gt; b;
    for(int i = 1; i &lt;= n; i++){
        if(b == a[i]){
            cout &lt;&lt; i;
            flag = 1;
            break;
        }
    }
    if(flag == 0){
        cout &lt;&lt; &quot;-1&quot;;
    }

    return 0;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[蓝桥杯 BASIC-4 基础练习 数列特征]]></title>
        <id>https://blog.csoulode.com/post/PnyolQFu3/</id>
        <link href="https://blog.csoulode.com/post/PnyolQFu3/">
        </link>
        <updated>2020-03-11T03:35:28.000Z</updated>
        <content type="html"><![CDATA[<p>问题描述<br>
给出n个数，找出这n个数的最大值，最小值，和。</p>
<p>输入格式<br>
第一行为整数n，表示数的个数。<br>
第二行有n个数，为给定的n个数，每个数的绝对值都小于10000。</p>
<p>输出格式<br>
输出三行，每行一个整数。第一行表示这些数中的最大值，第二行表示这些数中的最小值，第三行表示这些数的和。</p>
<p>样例输入<br>
5<br>
1 3 -2 4 5</p>
<p>样例输出<br>
5<br>
-2<br>
11</p>
<p>数据规模与约定<br>
1 &lt;= n &lt;= 10000。</p>
<pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;
using namespace std;

int a[10001];
int main(){
    int n;
    cin &gt;&gt; n;
    for(int i = 0; i &lt; n; i++)
        cin &gt;&gt; a[i];
    sort(a, a + n);
    int sum = 0;
    for(int i = 0; i &lt; n; i++)
        sum += a[i];
    cout &lt;&lt; a[n - 1] &lt;&lt; endl;
    cout &lt;&lt; a[0] &lt;&lt; endl;
    cout &lt;&lt; sum &lt;&lt; endl;

    return 0;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[蓝桥杯 BASIC-3 基础练习 字母图形]]></title>
        <id>https://blog.csoulode.com/post/tQZ3n6VwS/</id>
        <link href="https://blog.csoulode.com/post/tQZ3n6VwS/">
        </link>
        <updated>2020-03-11T03:27:05.000Z</updated>
        <content type="html"><![CDATA[<p>问题描述<br>
利用字母可以组成一些美丽的图形，下面给出了一个例子：<br>
ABCDEFG<br>
BABCDEF<br>
CBABCDE<br>
DCBABCD<br>
EDCBABC<br>
这是一个5行7列的图形，请找出这个图形的规律，并输出一个n行m列的图形。</p>
<p>输入格式<br>
输入一行，包含两个整数n和m，分别表示你要输出的图形的行数的列数。</p>
<p>输出格式<br>
输出n行，每个m个字符，为你的图形。</p>
<p>样例输入<br>
5 7</p>
<p>样例输出<br>
ABCDEFG<br>
BABCDEF<br>
CBABCDE<br>
DCBABCD<br>
EDCBABC</p>
<p>数据规模与约定<br>
1 &lt;= n, m &lt;= 26。</p>
<pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;
using namespace std;

int n, m;
char a[27][27];
int main(){
    cin &gt;&gt; n &gt;&gt; m;
    int flag = 0;
    if(n &gt; m){
        int tmp = n;
        n = m;
        m = tmp;
        flag = 1;
    }
    for(int i = 0; i &lt; n; i++){
        for(int j = 0; j &lt; m; j++){
            if(i == 0){
                a[i][j] = 'A' + j;
            }
            else{
                if(j == 0){
                    a[i][j] = a[0][i];
                }
                else{
                    a[i][j] = a[i - 1][j - 1];
                }
            }
        }
    }
    if(!flag){
        for(int i = 0; i &lt; n; i++){
            for(int j = 0; j &lt; m; j++){
                cout &lt;&lt; a[i][j];
            }
            cout &lt;&lt; endl;
        }
    }
    else{
        for(int i = 0; i &lt; m; i++){
            for(int j = 0; j &lt; n; j++){
                cout &lt;&lt; a[j][i];
            }
            cout &lt;&lt; endl;
        }
    }

    return 0;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[蓝桥杯 BASIC-2 基础练习 01字串]]></title>
        <id>https://blog.csoulode.com/post/VtVwfhDnb/</id>
        <link href="https://blog.csoulode.com/post/VtVwfhDnb/">
        </link>
        <updated>2020-03-11T03:25:05.000Z</updated>
        <content type="html"><![CDATA[<p>问题描述<br>
对于长度为5位的一个01串，每一位都可能是0或1，一共有32种可能。它们的前几个是：<br>
00000<br>
00001<br>
00010<br>
00011<br>
00100<br>
请按从小到大的顺序输出这32种01串。</p>
<p>输入格式<br>
本试题没有输入。</p>
<p>输出格式<br>
输出32行，按从小到大的顺序每行一个长度为5的01串。</p>
<p>样例输出<br>
00000<br>
00001<br>
00010<br>
00011<br>
&lt;以下部分省略&gt;</p>
<pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;
using namespace std;

int main(){
    for(int i = 0; i &lt; 32; i++){
        cout &lt;&lt; i / 16 % 2 &lt;&lt; i / 8 % 2 &lt;&lt; i / 4 % 2 &lt;&lt; i / 2 % 2 &lt;&lt; i % 2 &lt;&lt; endl;
    }

    return 0;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[蓝桥杯 BASIC-1 基础练习 闰年判断]]></title>
        <id>https://blog.csoulode.com/post/bN7M1nIcF/</id>
        <link href="https://blog.csoulode.com/post/bN7M1nIcF/">
        </link>
        <updated>2020-03-11T03:22:07.000Z</updated>
        <content type="html"><![CDATA[<p>问题描述<br>
给定一个年份，判断这一年是不是闰年。<br>
当以下情况之一满足时，这一年是闰年：</p>
<ol>
<li>年份是4的倍数而不是100的倍数；</li>
<li>年份是400的倍数。<br>
其他的年份都不是闰年。</li>
</ol>
<p>输入格式<br>
输入包含一个整数y，表示当前的年份。</p>
<p>输出格式<br>
输出一行，如果给定的年份是闰年，则输出yes，否则输出no。</p>
<p>说明：当试题指定你输出一个字符串作为结果（比如本题的yes或者no，你需要严格按照试题中给定的大小写，写错大小写将不得分。</p>
<p>样例输入<br>
2013<br>
样例输出<br>
no</p>
<p>样例输入<br>
2016<br>
样例输出<br>
yes</p>
<p>数据规模与约定<br>
1990 &lt;= y &lt;= 2050。</p>
<pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;
using namespace std;

int main(){
    int n;
    cin &gt;&gt; n;
    if((n % 4 == 0 &amp;&amp; n % 100 != 0) || n % 400 == 0){
        cout &lt;&lt; &quot;yes&quot;;
    }
    else{
        cout &lt;&lt; &quot;no&quot;;
    }

    return 0;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[蓝桥杯 BEGIN-4 入门训练 Fibonacci数列]]></title>
        <id>https://blog.csoulode.com/post/oBfh54MWL/</id>
        <link href="https://blog.csoulode.com/post/oBfh54MWL/">
        </link>
        <updated>2020-03-10T15:13:53.000Z</updated>
        <content type="html"><![CDATA[<p>问题描述<br>
Fibonacci数列的递推公式为：Fn=Fn-1+Fn-2，其中F1=F2=1。</p>
<p>当n比较大时，Fn也非常大，现在我们想知道，Fn除以10007的余数是多少。</p>
<p>输入格式<br>
输入包含一个整数n。</p>
<p>输出格式<br>
输出一行，包含一个整数，表示Fn除以10007的余数。</p>
<p>说明：在本题中，答案是要求Fn除以10007的余数，因此我们只要能算出这个余数即可，而不需要先计算出Fn的准确值，再将计算的结果除以10007取余数，直接计算余数往往比先算出原数再取余简单。</p>
<p>样例输入<br>
10<br>
样例输出<br>
55</p>
<p>样例输入<br>
22<br>
样例输出<br>
7704</p>
<p>数据规模与约定<br>
1 &lt;= n &lt;= 1,000,000。</p>
<pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;
using namespace std;

int ans[1000001] = {0, 1, 1};

int main(){
    int n;
    cin &gt;&gt; n;
    for(int i = 3; i &lt;= n; i++){
        ans[i] = (ans[i - 1] + ans[i - 2]) % 10007;
    }
    cout &lt;&lt; ans[n] &lt;&lt; endl;

    return 0;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[蓝桥杯 BEGIN-3 入门训练 圆的面积]]></title>
        <id>https://blog.csoulode.com/post/OkNEy0ohD/</id>
        <link href="https://blog.csoulode.com/post/OkNEy0ohD/">
        </link>
        <updated>2020-03-10T15:09:41.000Z</updated>
        <content type="html"><![CDATA[<p>问题描述<br>
给定圆的半径r，求圆的面积。</p>
<p>输入格式<br>
输入包含一个整数r，表示圆的半径。</p>
<p>输出格式<br>
输出一行，包含一个实数，四舍五入保留小数点后7位，表示圆的面积。<br>
说明：在本题中，输入是一个整数，但是输出是一个实数。</p>
<p>对于实数输出的问题，请一定看清楚实数输出的要求，比如本题中要求保留小数点后7位，则你的程序必须严格的输出7位小数，输出过多或者过少的小数位数都是不行的，都会被认为错误。</p>
<p>实数输出的问题如果没有特别说明，舍入都是按四舍五入进行。</p>
<p>样例输入<br>
4</p>
<p>样例输出<br>
50.2654825</p>
<p>数据规模与约定<br>
1 &lt;= r &lt;= 10000。</p>
<p>提示<br>
本题对精度要求较高，请注意π的值应该取较精确的值。你可以使用常量来表示π，比如PI=3.14159265358979323，也可以使用数学公式来求π，比如PI=atan(1.0)*4。</p>
<pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;
using namespace std;

int main(){
    int n;
    cin &gt;&gt; n;
    printf(&quot;%.7lf&quot;, atan(1.0)*4 * n * n);

    return 0;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[蓝桥杯 BEGIN-2 入门训练 序列求和]]></title>
        <id>https://blog.csoulode.com/post/ih27xI1j6/</id>
        <link href="https://blog.csoulode.com/post/ih27xI1j6/">
        </link>
        <updated>2020-03-10T15:05:23.000Z</updated>
        <content type="html"><![CDATA[<p>问题描述<br>
求1+2+3+...+n的值。</p>
<p>输入格式<br>
输入包括一个整数n。</p>
<p>输出格式<br>
输出一行，包括一个整数，表示1+2+3+...+n的值。</p>
<p>样例输入<br>
4<br>
样例输出<br>
10</p>
<p>样例输入<br>
100<br>
样例输出<br>
5050</p>
<p>数据规模与约定<br>
1 &lt;= n &lt;= 1,000,000,000。</p>
<pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;
using namespace std;

unsigned long long n, a, i = 1;

int main(){
    ios::sync_with_stdio(false);
    cin.tie(0);
    cin &gt;&gt; n;
    for(i; i &lt;= n; i++)
        a += i;
    cout &lt;&lt; a &lt;&lt; endl;
    
    return 0;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[蓝桥杯 BEGIN-1  入门训练 A+B问题]]></title>
        <id>https://blog.csoulode.com/post/vJtmP9-JI/</id>
        <link href="https://blog.csoulode.com/post/vJtmP9-JI/">
        </link>
        <updated>2020-03-10T14:52:32.000Z</updated>
        <content type="html"><![CDATA[<p>问题描述<br>
输入A、B，输出A+B。</p>
<p>输入格式<br>
输入的第一行包括两个整数，由空格分隔，分别表示A、B。</p>
<p>输出格式<br>
输出一行，包括一个整数，表示A+B的值。</p>
<p>样例输入<br>
12 45</p>
<p>样例输出<br>
57</p>
<p>数据规模与约定<br>
-10000 &lt;= A, B &lt;= 10000。</p>
<pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;
using namespace std;

int main(){
    ios::sync_with_stdio(false);    //本行与下一行是加快cin,cout(虽说本题用不上2333)
    cin.tie(0); 
    int a, b;
    cin &gt;&gt; a &gt;&gt; b;
    cout &lt;&lt; a + b &lt;&lt; endl;

    return 0;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[PAT乙级 1002 写出这个数]]></title>
        <id>https://blog.csoulode.com/post/0NBEIuHyk/</id>
        <link href="https://blog.csoulode.com/post/0NBEIuHyk/">
        </link>
        <updated>2020-03-09T05:10:12.000Z</updated>
        <content type="html"><![CDATA[<p>读入一个正整数 n，计算其各位数字之和，用汉语拼音写出和的每一位数字。</p>
<p>输入格式：<br>
每个测试输入包含 1 个测试用例，即给出自然数 n 的值。这里保证 n 小于 10<br>
​100<br>
​​ 。</p>
<p>输出格式：<br>
在一行内输出 n 的各位数字之和的每一位，拼音数字间有 1 空格，但一行中最后一个拼音数字后没有空格。</p>
<p>输入样例：<br>
1234567890987654321123456789</p>
<p>输出样例：<br>
yi san wu</p>
<p>//此题判题程序貌似没有忽略结尾空格，所以需做特判结尾不输出空格</p>
<pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;
using namespace std;

int main(){
    string a[10] = {&quot;ling&quot;, &quot;yi&quot;, &quot;er&quot;, &quot;san&quot;, &quot;si&quot;, &quot;wu&quot;, &quot;liu&quot;, &quot;qi&quot;, &quot;ba&quot;, &quot;jiu&quot;};
    string b;
    int sum = 0, tmp[3], len = 0;
    cin &gt;&gt; b;
    for(int i = 0; i &lt; b.length(); i++) {
        sum += b[i] - '0';
    }
    while(sum != 0){
        tmp[len++] = sum % 10;
        sum /= 10;
    }
    for(int i = len - 1; i &gt;= 0; i--){
        cout &lt;&lt; a[tmp[i]];
        if(i != 0)  cout &lt;&lt; &quot; &quot;;
    }

    return 0;
}
</code></pre>
]]></content>
    </entry>
</feed>